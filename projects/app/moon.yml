fileGroups:
  sentryCliEnv:
    - $SENTRY_*
  expoCliEnv:
    - "$EXPO_*"
  # WARNING: these must end in trialing slash to be rsync
  buildVercelExpoOutdir:
    - dist/.cache/vercel-expo/
  buildVercelExpoSentryOutdir:
    - dist/.cache/vercel-expo-sentry/
  buildVercelOutdir:
    - dist/vercel/
  buildEasUpdateOutdir:
    - dist/eas/

workspace:
  inheritedTasks:
    rename:
      deploy: "deployVercelVercel"

tasks:
  build:
    deps:
      - buildEasUpdate
      - buildVercel

  buildEasUpdate:
    command: yarn expo export -p ios -p android --source-maps --output-dir @group(buildEasUpdateOutdir)
    outputs:
      - "@group(buildEasUpdateOutdir)"

  buildVercel:
    # Copy to final destination.
    command: rsync -a --delete @group(buildVercelExpoSentryOutdir) @group(buildVercelOutdir)
    deps:
      - buildVercelExpoSentry
    outputs:
      - "@group(buildVercelOutdir)"

  buildVercelExpo:
    command: |
      rm -rf @group(buildVercelExpoOutdir) &&
      yarn expo export -p web --source-maps --output-dir @group(buildVercelExpoOutdir)
    inputs:
      - "@group(expoCliEnv)"
      - "*.{json,js}"
      - "{api,assets,public,src}/**/*"
    options:
      shell: true
    outputs:
      - "@group(buildVercelExpoOutdir)"

  buildVercelExpoSentry:
    command: |
      rsync -a --delete @group(buildVercelExpoOutdir) @group(buildVercelExpoSentryOutdir) &&
      npx -y @sentry/cli@2.38.2 sourcemaps inject @group(buildVercelExpoSentryOutdir)
    deps:
      - buildVercelExpo
    inputs:
      - "@group(sentryCliEnv)"
    options:
      shell: true
    outputs:
      - "@group(buildVercelExpoSentryOutdir)"

  dbGenerate:
    command: yarn run drizzle-kit generate
    options:
      runInCI: false

  dbMigrate:
    command: yarn tsx ./bin/dbMigrate.ts
    inputs:
      - drizzle/**/*
    options:
      envFile: .env.local
      runInCI: false

  deploy:
    deps:
      - deployEasUpdate
      - deployVercel
    options:
      runInCI: false

  deployEasUpdate:
    deps:
      - deployEasUpdateEas
      - deployEasUpdateSentry
    options:
      persistent: false
      runInCI: false

  deployEasUpdateEas:
    command: npx -y eas-cli@13.2.1 update --skip-bundler --input-dir @group(buildEasUpdateOutdir) --auto --non-interactive
    deps:
      - buildEasUpdate
    options:
      persistent: false
      runInCI: false

  deployEasUpdateSentry:
    command: npx -y sentry-expo-upload-sourcemaps @group(buildEasUpdateOutdir)
    deps:
      - buildEasUpdate
    options:
      persistent: false
      runInCI: false

  deployVercel:
    deps:
      - deployVercelVercel
      - deployVercelSentry
    options:
      persistent: false
      runInCI: false

  deployVercelVercel:
    deps:
      - buildVercel

  deployVercelSentry:
    command: npx -y @sentry/cli@2.38.2 sourcemaps upload -o haohaohow -p app @group(buildVercelOutdir)
    deps:
      - buildVercel
    options:
      persistent: false
      runInCI: false

  dev:
    command: yarn expo start --web # --tunnel
    local: true
    env:
      # Fixes: (node:97180) Warning: To load an ES module, set "type": "module"
      # in the package.json or use the .mjs extension.
      #
      # Pass $NODE_OPTIONS to support VS Code "JavaScript Debug Terminal".
      NODE_OPTIONS: --import tsx $NODE_OPTIONS

  generateRadicalMnemonics:
    command: yarn tsx ./bin/generateRadicalMnemonics.ts
    options:
      runInCI: false
      envFile: .env.local
      cache: false
    env:
      NODE_OPTIONS: --experimental-sqlite $NODE_OPTIONS

  generateRadicalPinyinMnemonics:
    command: yarn tsx ./bin/generateRadicalPinyinMnemonics.ts
    options:
      runInCI: false
      envFile: .env.local
      cache: false
    env:
      NODE_OPTIONS: --experimental-sqlite $NODE_OPTIONS

  generateWordDictionary:
    command: yarn tsx ./bin/generateWordDictionary.ts
    options:
      runInCI: false
      envFile: .env.local
      cache: false

  expoDoctor:
    command: npx -y expo-doctor@1.12.4
    env:
      # Don't check that all the expo-* packages are the latest versions. That's
      # already handled by renovate in a way that doesn't break PR builds when a
      # new version comes out.
      EXPO_OFFLINE: "1"
    options:
      # This checks the latest version of dependencies from the internet, so it
      # can't cache purely off local filesystem. It's important cache is
      # disabled otherwise the daily CI won't run this.
      cache: false

  expoGenerateTypes:
    # The recommended command from https://docs.expo.dev/router/reference/typed-routes/#type-generation
    command: yarn expo customize tsconfig.json
    options:
      cache: false
    env:
      # Fixes: (node:97180) Warning: To load an ES module, set "type": "module"
      # in the package.json or use the .mjs extension.
      #
      # Pass $NODE_OPTIONS to support VS Code "JavaScript Debug Terminal".
      NODE_OPTIONS: --import tsx $NODE_OPTIONS

  test:
    command: node --test --test-reporter=spec --import tsx "src/**/*.test.ts"
    inputs:
      - "src"
      - "*.{json,cjs,js,ts}"
    options:
      envFile: .env.test

  testWatch:
    command: node --test --watch --import tsx "**/*.test.ts"
    local: true
    options:
      envFile: .env.test

  typecheck:
    deps:
      - expoGenerateTypes

dependsOn:
  - lib

tags:
  - eslint
  - prettier
  - typescript
  - vercel
