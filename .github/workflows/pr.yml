name: PR

on:
  merge_group:
  pull_request:

jobs:
  root:
    runs-on: ubuntu-latest
    steps:
      - name: üèó Clone repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: ./.github/actions/setup-tools

      - run: moon check root

  app:
    runs-on: ubuntu-latest
    env:
      # Format: 'github_test_pr_' <run_id> [ ':' <run_attempt> ]
      #
      # The run attempt is only included for re-runs to keep the branch name
      # slightly shorter and cleaner when there is no re-run.
      NEON_BRANCH_NAME: github_test_pr_${{ github.run_id }}${{ github.run_attempt != '1' && format(':{0}', github.run_attempt) || '' }}
      NEON_DATABASE_NAME: hao
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_APP }}
    steps:
      - name: üèó Clone repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üèó Create database branch for running tests
        uses: neondatabase/create-branch-action@v5
        id: create-neon-branch
        with:
          api_key: ${{ secrets.NEON_API_KEY }}
          branch_name: ${{ env.NEON_BRANCH_NAME }}
          database: ${{ env.NEON_DATABASE_NAME }}
          project_id: ${{ secrets.NEON_PROJECT_ID }}
          username: ${{ secrets.NEON_USERNAME }}

      - uses: ./.github/actions/setup-tools

      - run: moon check app

      - run: moon run app:dbMigrate
        env:
          DATABASE_URL: ${{ steps.create-neon-branch.outputs.db_url }}

      - name: üöÄ Preview deployment
        run: |
          npx vercel@34.3.0 pull --cwd projects/app --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
          moon run app:deployVercel
        env:
          EXPO_PUBLIC_REPLICACHE_LICENSE_KEY: ${{ secrets.EXPO_PUBLIC_REPLICACHE_LICENSE_KEY }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      - uses: neondatabase/delete-branch-action@v3
        with:
          project_id: ${{ secrets.NEON_PROJECT_ID }}
          branch: ${{ env.NEON_BRANCH_NAME }}
          api_key: ${{ secrets.NEON_API_KEY }}
        if: ${{ always() }}

  emails:
    runs-on: ubuntu-latest
    steps:
      - name: üèó Clone repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: ./.github/actions/setup-tools

      - run: moon check emails

  lib:
    runs-on: ubuntu-latest
    steps:
      - name: üèó Clone repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: ./.github/actions/setup-tools

      - run: moon check lib

  static:
    runs-on: ubuntu-latest
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_STATIC }}
    steps:
      - name: üèó Clone repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: ./.github/actions/setup-tools

      - run: moon check static

      - name: üöÄ Preview deployment
        run: |
          npx vercel@34.3.0 pull --cwd projects/static --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
          moon run static:deploy
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
