name: Release

on:
  push:
    branches:
      - main

jobs:
  database:
    runs-on: ubuntu-latest
    steps:
      - name: 🏗 Clone repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📦 Install dependencies
        uses: moonrepo/setup-toolchain@v0.3.1
        with:
          auto-install: true

      - name: 🚀 Migrate database
        run: moon run api:dbMigrate
        env:
          DATABASE_URL: ${{ secrets.NEON_DATABASE_URL }}

  api-vercel:
    runs-on: ubuntu-latest
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_API }}
    steps:
      - name: 🏗 Clone repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📦 Install dependencies
        uses: moonrepo/setup-toolchain@v0.3.1
        with:
          auto-install: true

      - name: 🔑 Fetch Vercel secrets
        run: moon run api:vercel -- pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: 🚀 Build project artifacts
        run: moon run api:vercel -- build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: 🚀 Publish artifacts
        run: moon run api:vercel -- deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

  app-vercel:
    runs-on: ubuntu-latest
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_APP }}
    steps:
      - name: 🏗 Clone repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📦 Install dependencies
        uses: moonrepo/setup-toolchain@v0.3.1
        with:
          auto-install: true

      - name: 🔑 Fetch Vercel secrets
        run: moon run app:vercel -- pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: 🚀 Build project artifacts
        run: moon run app:vercel -- build --prod --token=${{ secrets.VERCEL_TOKEN }}
        env:
          EXPO_PUBLIC_REPLICACHE_LICENSE_KEY: ${{ secrets.EXPO_PUBLIC_REPLICACHE_LICENSE_KEY }}

      - name: 🚀 Publish artifacts
        run: |
          moon run app:vercel -- deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
          moon run app:upload-sentry-source-maps
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

  static-vercel:
    runs-on: ubuntu-latest
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_STATIC }}
    steps:
      - name: 🏗 Clone repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📦 Install dependencies
        uses: moonrepo/setup-toolchain@v0.3.1
        with:
          auto-install: true

      - name: 🔑 Fetch Vercel secrets
        run: moon run static:vercel -- pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: 🚀 Build artifacts
        run: moon run static:vercel -- build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: 🚀 Publish artifacts
        run: moon run static:vercel -- deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

  eas-update:
    runs-on: ubuntu-latest
    steps:
      - name: 🏗 Clone repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📦 Install dependencies
        uses: moonrepo/setup-toolchain@v0.3.1
        with:
          auto-install: true

      - name: 🚀 Publish update
        run: |
          moon run app:eas -- update --auto --non-interactive
          moon run app:upload-sentry-source-maps
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
          EXPO_PUBLIC_REPLICACHE_LICENSE_KEY: ${{ secrets.EXPO_PUBLIC_REPLICACHE_LICENSE_KEY }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
